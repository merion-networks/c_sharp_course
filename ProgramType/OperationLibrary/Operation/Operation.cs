namespace OperationLibrary.Operation
{

    public record Customer(int Loyalty, bool HasOutstendingPayments, DateTime LastPurcheseDate);

    public record Order(int TotalAmound);

    public class ArithmeticOperation
    {

        public bool IsEligibleForDiscount(Customer customer, Order order)
        {

            return (customer.Loyalty > 1000 || order.TotalAmound > 500) &&
                !customer.HasOutstendingPayments && 
                (DateTime.Now - customer.LastPurcheseDate).TotalDays <= 30;
        }

        void Priority()
        {
            /*
            +-------+-----------------------------------------------------+
            | Приор |                      Операторы                      |
            +-------+-----------------------------------------------------+
            |   1   | (), []                                              |
            +-------+-----------------------------------------------------+
            |   2   | !, ~, ++, -- (унарные)                              |
            +-------+-----------------------------------------------------+
            |   3   | *, /, %                                             |
            +-------+-----------------------------------------------------+
            |   4   | +, -                                                |
            +-------+-----------------------------------------------------+
            |   5   | <<, >>                                              |
            +-------+-----------------------------------------------------+
            |   6   | <, >, <=, >=                                        |
            +-------+-----------------------------------------------------+
            |   7   | ==, !=                                              |
            +-------+-----------------------------------------------------+
            |   8   | &                                                   |
            +-------+-----------------------------------------------------+
            |   9   | ^                                                   |
            +-------+-----------------------------------------------------+
            |  10   | |                                                   |
            +-------+-----------------------------------------------------+
            |  11   | &&                                                  |
            +-------+-----------------------------------------------------+
            |  12   | ||                                                  |
            +-------+-----------------------------------------------------+
            |  13   | ?:                                                  |
            +-------+-----------------------------------------------------+
            |  14   | =, +=, -=, *=, /=, %=, &=, |=, ^=, <<=, >>=         |
            +-------+-----------------------------------------------------+
            */



            int result = 5 + 10 * 8; // 85

            int res = (5 + 10) * 8; // 120
        }

        public ArithmeticOperation()
        {

            // Сложение (+), Вычитание (-), Деление (/), Умножение (*)
            // Остаток от диления (%)

            int result = 10 % 3;

            Console.WriteLine(result);

            // Инкремент (++) и декремент (--)

            int x = 6;

            Console.WriteLine(x++);
            Console.WriteLine(++x);
        }
    }
}
